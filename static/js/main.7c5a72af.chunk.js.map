{"version":3,"sources":["components/Footer/Footer.styles.js","components/Footer/index.js","images/markedjs-logo.svg","components/Header/Header.styles.js","components/Header/index.js","components/Editor/index.js","components/Preview/index.js","components/MainContent/MainContent.styles.js","components/MainContent/index.js","GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Content","Footer","href","className","LogoContainer","MarkedLogoImg","img","Title","h1","Header","src","MarkedLogo","alt","Editor","onChange","markdownValue","id","value","Preview","marked","setOptions","breaks","highlight","code","Prism","languages","javascript","renderer","Renderer","link","title","text","dangerouslySetInnerHTML","__html","Panel","MainContent","useState","placeholder","setMarkdownValue","e","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,EAAUC,IAAOC,IAAV,qIAQPC,EAAUF,IAAOC,IAAV,8b,OCMLE,EAXA,kBACb,cAACJ,EAAD,UACE,eAACG,EAAD,WACE,mBAAGE,KAAK,iCAAR,gCACA,mBAAGA,KAAK,8BAAR,SACE,mBAAGC,UAAU,0BCVN,MAA0B,0CCE5BN,EAAUC,IAAOC,IAAV,gFAKPC,EAAUF,IAAOC,IAAV,sLAUPK,EAAgBN,IAAOC,IAAV,iGAMbM,EAAgBP,IAAOQ,IAAV,4CAIbC,EAAQT,IAAOU,GAAV,uFCVHC,EAXA,kBACb,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAACL,EAAD,UACE,cAACC,EAAD,CAAeK,IAAKC,EAAYC,IAAI,kBAEtC,cAACL,EAAD,uC,QCNSM,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OACb,0BAAUC,GAAG,SAASC,MAAOF,EAAeD,SAAUA,K,gCCyBzCI,EAxBC,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,cAEjBI,IAAOC,WAAW,CAChBC,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,WAAY,iBAK7D,IAAMC,EAAW,IAAIR,IAAOS,SAK5B,OAJAD,EAASE,KAAO,SAAU3B,EAAM4B,EAAOC,GACrC,MAAM,4BAAN,OAAmC7B,EAAnC,aAA4C6B,EAA5C,SAIA,qBACEC,wBAAyB,CACvBC,OAAQd,IAAOJ,EAAe,CAAEY,iBCpB3B9B,EAAUC,IAAOC,IAAV,0TAiBPmC,EAAQpC,IAAOC,IAAV,4aCGHoC,EAjBK,WAClB,MAA0CC,mBAASC,GAAnD,mBAAOtB,EAAP,KAAsBuB,EAAtB,KAIA,OACE,eAAC,EAAD,WACE,cAACJ,EAAD,UACE,cAAC,EAAD,CAAQnB,cAAeA,EAAeD,SALvB,SAAAyB,GAAC,OAAID,EAAiBC,EAAEC,OAAOvB,YAOhD,cAACiB,EAAD,UACE,cAAC,EAAD,CAASnB,cAAeA,UAQ1BsB,EAAW,ypCCtBJI,EAAcC,YAAH,iqBCoBTC,G,MAXH,WACV,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACsC,EAAD,SCLSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c5a72af.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n  gap: 3rem;\r\n\r\n  a {\r\n    font-size: var(--fontMed);\r\n    text-decoration: none;\r\n    color: var(--white);\r\n\r\n    &:hover {\r\n      color: green;\r\n      transition: 200ms ease-in;\r\n    }\r\n\r\n    i {\r\n      font-size: var(--fontSuperBig);\r\n      color: var(--white);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport { Wrapper, Content } from \"./Footer.styles\";\r\n\r\nconst Footer = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <a href=\"https://www.chriscolley.com.au\">chriscolley.com.au</a>\r\n      <a href=\"https://github.com/cscolley\">\r\n        <i className=\"fab fa-github\"></i>\r\n      </a>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/markedjs-logo.f5b61c35.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n  background: var(--white);\r\n  border-radius: 20px;\r\n  width: 75px;\r\n`;\r\n\r\nexport const MarkedLogoImg = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: var(--fontSuperBig);\r\n  color: var(--white);\r\n`;","import React from \"react\";\r\n\r\nimport MarkedLogo from \"../../images/markedjs-logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoContainer, MarkedLogoImg, Title } from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <LogoContainer>\r\n        <MarkedLogoImg src={MarkedLogo} alt='marked-logo' />\r\n      </LogoContainer>\r\n      <Title>Markdown Previewer</Title>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Editor = ({ onChange, markdownValue }) => (\r\n  <textarea id=\"editor\" value={markdownValue} onChange={onChange} />\r\n);\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport marked from \"marked\";\r\nimport Prism from 'prismjs';\r\n\r\nconst Preview = ({ markdownValue }) => {\r\n  // ALLOWS LINE BREAKS WITH RETURN BUTTON\r\n  marked.setOptions({\r\n    breaks: true,\r\n    highlight: function (code) {\r\n      return Prism.highlight(code, Prism.languages.javascript, \"javascript\");\r\n    },\r\n  });\r\n\r\n  // INSERTS target=\"_blank\" INTO HREF TAGS (required for Codepen links)\r\n  const renderer = new marked.Renderer();\r\n  renderer.link = function (href, title, text) {\r\n    return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      dangerouslySetInnerHTML={{\r\n        __html: marked(markdownValue, { renderer }),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 10px;\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  flex: 1 1 100%;\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n\r\nexport const Panel = styled.div`\r\n  width: 45%;\r\n  border: 4px solid var(--darkGrey);\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  flex-grow: 1;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  textarea, div {\r\n    resize: none;\r\n    width: 100%;\r\n    height: 100vh;\r\n    padding: 5px;\r\n    border: 1px solid var(--medGrey);\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    overflow-wrap: break-word;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Editor from \"../Editor\";\r\nimport Preview from \"../Preview\";\r\nimport { Wrapper, Panel } from \"./MainContent.styles\";\r\n\r\nconst MainContent = () => {\r\n  const [markdownValue, setMarkdownValue] = useState(placeholder);\r\n\r\n  const handleChange = e => setMarkdownValue(e.target.value);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Panel>\r\n        <Editor markdownValue={markdownValue} onChange={handleChange} />\r\n      </Panel>\r\n      <Panel>\r\n        <Preview markdownValue={markdownValue} />\r\n      </Panel>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n\r\nconst placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 3rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: \"Abel\", sans-serif;\r\n    color: var(--darkGrey);\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n  }\r\n\r\n  .App {\r\n    min-height: 100vh; /* will cover the 100% of viewport */\r\n    position: relative;\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: stretch;\r\n    padding-bottom: 100px; /* height of your footer */\r\n  }\r\n`;\r\n","import React from \"react\";\nimport Footer from \"./components/Footer\";\n\n// Components\nimport Header from \"./components/Header\";\nimport MainContent from \"./components/MainContent\";\n\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport './prism.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContent />\n      <Footer />\n      <GlobalStyle />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}